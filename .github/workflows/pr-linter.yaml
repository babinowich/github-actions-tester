name: PR Linter
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, edited, reopened, synchronize]
    branches:
      - main
jobs:
  # pr-lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Semantic Checker
  #       uses: morrisoncole/pr-lint-action@v1.5.0
  #       with:
  #         title-regex: "^(major|minor|fix)"
  #         on-failed-regex-fail-action: true
  #         on-failed-regex-request-changes: true
  #         on-failed-regex-create-review: true
  #         on-failed-regex-comment: "This PR does not begin with a release designation. Each PR into main must begin with 'major','minor', or 'fix'"
  #         repo-token: '${{ secrets.GITHUB_TOKEN }}'
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '14.x'
  #         # registry-url: 'https://npm.pkg.github.com'
  #         # # Defaults to the user or organization that owns the workflow file
  #         # scope: '@yembo'
  #     - name: Install
  #       run: npm install
  #     - run: npm run lint
  #     - run: npm run format
  package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Setup .npmrc file to publish to GitHub Packages
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          # registry-url: 'https://npm.pkg.github.com'
          # # Defaults to the user or organization that owns the workflow file
          # scope: '@yembo'
      - name: Install
        run: npm install
      - name: Get Current Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      - name: Create To-Be Version
        id: to-be-version
        uses: actions/github-script@v3
        with: 
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: string
          script: |
            console.log("HELLO THERE JS IN ACTIONS")
            // grab the current version and split it
            let currentVer = String(${{steps.package-version.outputs.current-version}})
            let currentVerArr = currentVer.split('.')
            // return new version in 0.0.0 format
      - name: Version
        run: npm version ${{steps.to-be-version.outputs.result}}